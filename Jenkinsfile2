node {
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
    echo "Job name is : ${env.JOB_NAME}"
    echo "Build number is : ${env.BUILD_NUMBER}"
    echo "Node name is : ${env.NODE_NAME} "
    echo "Jenkins Home dir is : ${env.JENKINS_HOME}"
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
    def mavenHome = tool name: "maven3.8.7"
   stage ('CheckoutCode') {
   git branch: 'development', credentialsId: '1cac8aa7-6dcc-40ca-b80e-8f38748f87ca', url: 'https://github.com/sam-jan6ambatch/maven-web-application.git'
   }
 stage ('Build') { 
 //sh "mvn clean package"
 sh "${mavenHome}/bin/mvn clean package"
  }
/*
  stage ('ExecuteSonarQubeReport') {
      sh "${mavenHome}/bin/mvn clean sonar:sonar"
  }
  stage ('UploadArtifactIntoNexus') {
      sh "${mavenHome}/bin/mvn clean deploy"
  }
  stage ('DeployApplicationIntoTomcatServer') {
      sshagent(['b7b0cf51-8452-4f55-9414-9ffcf7572374']) {
          sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.40.61:/opt/apache-tomcat-9.0.86/webapps/"
    }
  }
*/ 
  }
catch (e) {
currentBuild.result = "FAILED"
throw e
}
finally {
sendSlackNotifications(currentBuild.result)
}
}//node closing

//Send Slack Notificatons

def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"
 if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    col // Override default values based on build status
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: '#hdfcbank')
}
